// Code generated by entitgen. DO NOT EDIT.
package out

import (
	"github.com/akrennmair/slice"
	pb "github.com/hysios/entitgen/example/gen/proto"
	"github.com/hysios/entitgen/null"
	"google.golang.org/protobuf/types/known/timestamppb"
)

// ToProto converts the model to protobuf type.
func (u *User) ToProto() *pb.User {
	return &pb.User{
		Id:          uint32(u.ID),
		Name:        u.Name,
		Username:    u.Username,
		Namespace:   u.Namespace,
		Nickname:    u.Nickname,
		Email:       u.Email,
		Password:    null.NullToString(u.Password),
		Avatar:      u.Avatar,
		Phone:       u.Phone,
		Address:     u.Address,
		Description: u.Description,
		Score:       float32(u.Score),
		Role:        pb.Role(u.Role),
		IsActive:    u.IsActive,
		InScopes:    u.InScopes,
		CreatedAt:   timestamppb.New(u.CreatedAt),
		UpdatedAt:   timestamppb.New(u.UpdatedAt),
		MemberId:    uint32(u.MemberID),
		Member:      u.Member.ToProto(),
		Friends:     slice.Map(u.Friends, FriendToProto),
	}
}

// FromProto converts the protobuf type to model.
func (u *User) FromProto(pUser *pb.User) *User {
	return &User{
		ID:          uint(pUser.Id),
		Name:        pUser.Name,
		Username:    pUser.Username,
		Namespace:   pUser.Namespace,
		Nickname:    pUser.Nickname,
		Email:       pUser.Email,
		Password:    null.ToNullString(pUser.Password),
		Avatar:      pUser.Avatar,
		Phone:       pUser.Phone,
		Address:     pUser.Address,
		Description: pUser.Description,
		Score:       float64(pUser.Score),
		Role:        int32(pUser.Role),
		IsActive:    pUser.IsActive,
		InScopes:    pUser.InScopes,
		CreatedAt:   pUser.CreatedAt.AsTime(),
		UpdatedAt:   pUser.UpdatedAt.AsTime(),
		MemberID:    uint(pUser.MemberId),
		Member:      (*Member)(nil).FromProto(pUser.Member),
		Friends:     slice.Map(pUser.Friends, FriendFromProto),
	}
}

func UserFromProto(pUser *pb.User) *User {
	return (*User)(nil).FromProto(pUser)
}

func UserToProto(user *User) *pb.User {
	return user.ToProto()
}

func UserListFrom(users []*pb.User) []*User {
	return slice.Map(users, UserFromProto)
}

func UserListToProto(users []*User) []*pb.User {
	return slice.Map(users, UserToProto)
}
