package main

const typeTemplate = `// Code generated by entitgen. DO NOT EDIT.
package {{ .PkgName }}

{{ .GoImports }}

{{ if not .NoModel }} 
type {{.Name}} struct { {{range $x := .Fields}}
	{{ $x.DeclareField -}} 
{{end}}
}
{{ end }}

// ToProto converts the model to protobuf type.
{{ .ToProtoMethod }}

// FromProto converts the protobuf type to model.
{{ .FromProtoMethod }}

{{ .ModelFromProtoMethod }}
`

const (
	toProtoTemplate = `func ({{.Receive}}) ToProto() {{ .Return }} {
	return {{ .OutputType }}{ 
		{{ range .Fields }}{{.PbName}}: {{ printf "%s.%s" $.ShortName .Name | .ConvertPbType }},
		{{ end }}
	}
}`

	fromProtoTemplate = `func ({{.Receive}}) FromProto({{ .InputArgs }}) {{ .Return}} {
	return {{ .OutputType }}{
		{{ range .Fields }}{{.Name}}: {{ printf "%s.%s" $.InputName .PbName | .ConvertType }},
		{{ end }}
	}
}`

	modelFromProtoTemplate = `func {{ .Name }}FromProto({{ .InputArgs }}) {{ .Return}} {
	return (*{{.Name}})(nil).FromProto({{ .InputVals }})
}`
)
